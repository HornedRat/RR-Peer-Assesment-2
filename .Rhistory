webpage <- readLines(url)
webpage
write(webpage, file = "webpage.txt")
getwd
getwd()
library(rvest)
url <- 'https://rpg.rem.uz/'
webpage <- read_html(url)
files_html <- html_nodes(webpage,'.fb-n')
content <- html_nodes(webpage,'#content')
files_html <- html_nodes(webpage,'#fallback fb-n')
files_html <- html_nodes(webpage,'#fallback .fb-n')
(webpage,'#fallback fb-n')
library(rvest)
url <- 'https://rpg.rem.uz/'
webpage <- read_html(url)
files_html <- html_nodes(webpage, '#fallback fb-n')
files_html <- html_nodes(webpage, '#fallback .fb-n')
files_html <- html_nodes(webpage, '#fallback a')
files_html <- html_nodes(webpage, '#fallback tr')
library(rvest)
url <- 'https://rpg.rem.uz/'
webpage <- read_html(url)
files_html <- html_nodes(webpage, '#fallback tr')
for (nod in files_html) {
print(html_attr(nod, "alt"))
}
?html_attr
testowy <- files_html[1]
img <- html_nodes(testowy, "td img")
img <- html_nodes(testowy, "td/img")
img <- html_nodes(testowy, xpath = "td/img")
img <- html_nodes(testowy, xpath = "/td/img")
img <- html_nodes(testowy[1], xpath = "td/img")
testowy
files_html <- html_nodes(webpage, '#fallback tr')
testowy <- files_html[2]
testowy
img <- html_nodes(testowy, xpath = "td/img")
html_attr(img, "alt")
length(files_html)
files_html <- html_nodes(webpage, '#fallback tr')[2:length(files_html)]
for (nod in files_html) {
img <- html_nodes(nod, xpath = "td/img")
print(html_attr(nod, "alt"))
}
for (nod in files_html) {
img <- html_nodes(nod, xpath = "td/img")
print(html_attr(img, "alt"))
}
url <- 'https://rpg.rem.uz/'
webpage <- read_html(url)
#tworzy listę węzłów - wierszy tabeli
files_html <- html_nodes(webpage, '#fallback tr')[2:length(files_html)]
for (nod in files_html) {
img <- html_nodes(nod, xpath = "td/img")
print(html_attr(img, "alt"))
}
files_html <- files_html[2:length(files_html)]
files_html <- html_nodes(webpage, '#fallback tr')
files_html <- files_html[2:length(files_html)]
testowy <- files_html[1]
testowy <- files_html[1]
img_testowy <- html_nodes(testowy, xpath = "td/img")
print(html_attr(img, "alt"))
print(html_attr(img_testowy, "alt"))
html_attr(img_testowy, "alt") == "folder"
file_lister <- function(url) {
#wczytuje wiersze tabeli (tr)
rows_html <- html_nodes(webpage, '#fallback tr')
rows_html <- files_html[2:length(files_html)]
for (nod in rows_html) {
img <- html_nodes(nod, xpath = "td/img")
type <- (html_attr(img, "alt"))
if (type == "folder"){
subfolder <- html_nodes(nod, xpath = "td/a")
subfolder_name <- (html_attr(subfolder, "href"))
subfolder_path <- paste0(url, subfolder_name)
file_lister(subfolder_path)
}
else if (type == "file") {
print(html_text(nod, xpath = "td/a"))
}
}
}
debug(file_lister)
file_lister(url)
print(subfolder_path)
library(rvest)
adres <- 'https://rpg.rem.uz/'
#funkcja rekurencyjna, która wylistowuje nazwy plików
file_lister <- function(url) {
webpage <- read_html(url)
#wczytuje wiersze tabeli (tr)
rows_html <- html_nodes(webpage, '#fallback tr')
rows_html <- files_html[2:length(files_html)]
for (nod in rows_html) {
img <- html_nodes(nod, xpath = "td/img")
type <- (html_attr(img, "alt"))
if (type == "folder"){
subfolder <- html_nodes(nod, xpath = "td/a")
subfolder_name <- (html_attr(subfolder, "href"))
subfolder_path <- paste0(url, subfolder_name)
file_lister(subfolder_path)
}
else if (type == "file") {
print(html_text(nod, xpath = "td/a"))
}
}
}
debug(file_lister)
file_lister(adres)
file_lister(adres)
library(rvest)
adres <- 'https://rpg.rem.uz/'
#funkcja rekurencyjna, która wylistowuje nazwy plików
file_lister <- function(url) {
webpage <- read_html(url)
#wczytuje wiersze tabeli (tr)
rows_html <- html_nodes(webpage, '#fallback tr')
rows_html <- rows_html[2:length(rows_html)]
for (nod in rows_html) {
img <- html_nodes(nod, xpath = "td/img")
type <- (html_attr(img, "alt"))
if (type == "folder"){
subfolder <- html_nodes(nod, xpath = "td/a")
subfolder_name <- (html_attr(subfolder, "href"))
subfolder_path <- paste0(url, subfolder_name)
file_lister(subfolder_path)
}
else if (type == "file") {
print(html_text(nod, xpath = "td/a"))
}
}
}
debug(file_lister)
file_lister(adres)
file_lister(adres)
library(rvest)
adres <- 'https://rpg.rem.uz/'
file_lister(adres)
write(webpage, file = 'webpage2.html')
library(rvest)
adres <- 'https://rpg.rem.uz//13th%Age/'
#funkcja rekurencyjna, która wylistowuje nazwy plików
file_lister <- function(url) {
webpage <- read_html(url)
#wczytuje wiersze tabeli (tr)
rows_html <- html_nodes(webpage, '#fallback tr')
rows_html <- rows_html[2:length(rows_html)]
for (nod in rows_html) {
img <- html_nodes(nod, xpath = "td/img")
type <- (html_attr(img, "alt"))
if (type == "folder"){
subfolder <- html_nodes(nod, xpath = "td/a")
subfolder_name <- (html_attr(subfolder, "href"))
subfolder_path <- paste0(url, subfolder_name)
file_lister(subfolder_path)
}
else if (type == "file") {
print(html_text(nod, xpath = "td/a"))
}
}
}
file_lister(adres)
library(rvest)
adres <- 'https://rpg.rem.uz//13th Age/'
#funkcja rekurencyjna, która wylistowuje nazwy plików
file_lister <- function(url) {
webpage <- read_html(url)
#wczytuje wiersze tabeli (tr)
rows_html <- html_nodes(webpage, '#fallback tr')
rows_html <- rows_html[2:length(rows_html)]
for (nod in rows_html) {
img <- html_nodes(nod, xpath = "td/img")
type <- (html_attr(img, "alt"))
if (type == "folder"){
subfolder <- html_nodes(nod, xpath = "td/a")
subfolder_name <- (html_attr(subfolder, "href"))
subfolder_path <- paste0(url, subfolder_name)
file_lister(subfolder_path)
}
else if (type == "file") {
print(html_text(nod, xpath = "td/a"))
}
}
}
file_lister(adres)
library(rvest)
adres <- 'https://rpg.rem.uz/13th%20Age/'
#funkcja rekurencyjna, która wylistowuje nazwy plików
file_lister <- function(url) {
webpage <- read_html(url)
#wczytuje wiersze tabeli (tr)
rows_html <- html_nodes(webpage, '#fallback tr')
rows_html <- rows_html[2:length(rows_html)]
for (nod in rows_html) {
img <- html_nodes(nod, xpath = "td/img")
type <- (html_attr(img, "alt"))
if (type == "folder"){
subfolder <- html_nodes(nod, xpath = "td/a")
subfolder_name <- (html_attr(subfolder, "href"))
subfolder_path <- paste0(url, subfolder_name)
file_lister(subfolder_path)
}
else if (type == "file") {
print(html_text(nod, xpath = "td/a"))
}
}
}
file_lister(adres)
debug(file_lister)
file_lister(adres)
library(rvest)
adres <- 'https://rpg.rem.uz/13th%20Age/'
#funkcja rekurencyjna, która wylistowuje nazwy plików
file_lister <- function(url) {
webpage <- read_html(url)
#wczytuje wiersze tabeli (tr)
rows_html <- html_nodes(webpage, '#fallback tr')
rows_html <- rows_html[2:length(rows_html)]
for (nod in rows_html) {
img <- html_nodes(nod, xpath = "td/img")
type <- (html_attr(img, "alt"))
if (type == "folder"){
subfolder <- html_nodes(nod, xpath = "td/a")
subfolder_name <- (html_attr(subfolder, "href"))
subfolder_path <- paste0(url, subfolder_name)
file_lister(subfolder_path)
}
else if (type == "file") {
print(html_text(nod, xpath = "td/a"))
}
}
}
debug(file_lister)
file_lister(adres)
debug(file_lister)
file_lister(adres)
library(rvest)
adres <- 'https://rpg.rem.uz/13th%20Age/'
file_lister(adres)
print(subfolder_path)
library(rvest)
adres <- 'https://rpg.rem.uz/'
file_lister <- function(url) {
webpage <- read_html(url)
#wczytuje wiersze tabeli (tr)
rows_html <- html_nodes(webpage, '#fallback tr')
rows_html <- rows_html[2:length(rows_html)]
for (nod in rows_html) {
img <- html_nodes(nod, xpath = "td/img")
type <- (html_attr(img, "alt"))
if (type == "folder"){
subfolder <- html_nodes(nod, xpath = "td/a")
subfolder_name <- (html_attr(subfolder, "href"))
subfolder_path <- paste0(url, subfolder_name)
file_lister(subfolder_path)
}
else if (type == "file") {
print(html_text(nod, xpath = "td/a"))
}
}
}
debug(file_lister)
file_lister(adres)
head(webpage[1])
print(url)
library(rvest)
adres <- 'https://rpg.rem.uz/'
#funkcja rekurencyjna, która wylistowuje nazwy plików
file_lister <- function(url) {
webpage <- read_html(url)
#wczytuje wiersze tabeli (tr)
rows_html <- html_nodes(webpage, '#fallback tr')
rows_html <- rows_html[2:length(rows_html)]
for (nod in rows_html) {
img <- html_nodes(nod, xpath = "td/img")
type <- (html_attr(img, "alt"))
if (type == "folder"){
subfolder <- html_nodes(nod, xpath = "td/a")
subfolder_name <- (html_attr(subfolder, "href"))
subfolder_path <- paste0(adres, subfolder_name)
file_lister(subfolder_path)
}
else if (type == "file") {
print(html_text(nod, xpath = "td/a"))
}
}
}
file_lister(adres)
library(rvest)
adres <- 'https://rpg.rem.uz/'
debug(file_lister)
file_lister(adres)
library(rvest)
adres <- 'https://rpg.rem.uz/'
#funkcja rekurencyjna, która wylistowuje nazwy plików
file_lister <- function(url) {
webpage <- read_html(url)
#wczytuje wiersze tabeli (tr)
rows_html <- html_nodes(webpage, '#fallback tr')
rows_html <- rows_html[2:length(rows_html)]
for (nod in rows_html) {
img <- html_nodes(nod, xpath = "td/img")
type <- (html_attr(img, "alt"))
if (type == "folder"){
subfolder <- html_nodes(nod, xpath = "td/a")
subfolder_name <- (html_attr(subfolder, "href"))
subfolder_path <- paste0(adres, subfolder_name)
file_lister(subfolder_path)
}
else if (type == "file") {
print(html_text(nod, xpath = "td/a"))
}
}
}
debug(file_lister)
file_lister(adres)
print(url)
print(url)
test <- read_html(url)
test
test[2]
test[[2]]
test[2]$doc
as.character(test)
write(as.character(test), file = 'webpage3.html')
library(rvest)
adres <- 'https://rpg.rem.uz/'
#funkcja rekurencyjna, która wylistowuje nazwy plików
file_lister <- function(url) {
working_url <- url
webpage <- read_html(working_url)
#wczytuje wiersze tabeli (tr)
rows_html <- html_nodes(webpage, '#fallback tr')
rows_html <- rows_html[2:length(rows_html)]
for (nod in rows_html) {
img <- html_nodes(nod, xpath = "td/img")
type <- (html_attr(img, "alt"))
if (type == "folder"){
subfolder <- html_nodes(nod, xpath = "td/a")
subfolder_name <- (html_attr(subfolder, "href"))
subfolder_path <- paste0(adres, subfolder_name)
file_lister(subfolder_path)
}
else if (type == "file") {
print(html_text(nod, xpath = "td/a"))
}
}
}
debug(file_lister)
file_lister(adres)
install.packages("RCrawler")
?RCrawler
library(RCrawler)
install.packages("Rcrawler")
library(Rcrawler)
?Rcrawler
Rcrawler(Website = "https://rpg.rem.uz/13th%20Age/3rd%20Party%20%5BNon-Pelgrane%5D/")
View(INDEX)
?Rcrawler
Rcrawler(Website = "https://rpg.rem.uz/13th%20Age/3rd%20Party%20%5BNon-Pelgrane%5D/", no_cores = 4, no_conn = 4, ExtractPatterns= c("//*/a/@href"),PatternsNames=c("Links"), ManyPerPattern=TRUE)
library(Rcrawler)
Rcrawler(Website = "https://rpg.rem.uz/13th%20Age/3rd%20Party%20%5BNon-Pelgrane%5D/", no_cores = 4, no_conn = 4, ExtractPatterns= c("//*/a/@href"),PatternsNames=c("Links"), ManyPerPattern=TRUE)
?Rcrawler
Rcrawler(Website = "https://rpg.rem.uz/13th%20Age/3rd%20Party%20%5BNon-Pelgrane%5D/", no_cores = 4, no_conn = 4, ExtractXpathPat= c("//*/a/@href"),PatternsNames=c("Links"), ManyPerPattern=TRUE)
Rcrawler(Website = "https://rpg.rem.uz/13th%20Age/3rd%20Party%20%5BNon-Pelgrane%5D/", no_cores = 4, no_conn = 4, ExtractXpathPat= c("//*tr/td/img/@alt", "//*/a/@href"),PatternsNames=c("Type", "Links"), ManyPerPattern=TRUE)
Rcrawler(Website = "https://rpg.rem.uz/13th%20Age/3rd%20Party%20%5BNon-Pelgrane%5D/", ExtractXpathPat= c("//*/tr/td/img/@alt", "//*/a/@href"),PatternsNames=c("Type", "Links"), ManyPerPattern=TRUE)
excontent2[1]
excontent2[2]
library(Rcrawler)
Rcrawler(Website = "https://rpg.rem.uz/13th%20Age/3rd%20Party%20%5BNon-Pelgrane%5D/",
ExtractXpathPat= c("//*/table/tr/td/img/@alt", "//*/table/tr/td/a/@href"),
PatternsNames=c("Type", "Links"),
ManyPerPattern=TRUE)
library(Rcrawler)
Rcrawler(Website = "https://rpg.rem.uz/",
ExtractXpathPat= c("//*/table/tr/td/img/@alt", "//*/table/tr/td/a/@href"),
PatternsNames=c("Type", "Links"),
ManyPerPattern=TRUE)
library(swirl)
swirl()
read.csv(path2csv, stringsAsFactors = FALSE) -> mydf
dim(mydf)
head()
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
cran
?select
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
-5:20
-(5:20)
select(cran, -(X:size))
filter(cran, package == "swirl")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country == "US" | country == "IN")
filter(cran, size > 100500, r_os == "linux-gnu")
is.na(c(3, 5, NA, 10))
!is.na(c(3, 5, NA, 10))
filter(cran, !is.na(r_version))
select(cran, size:ip_id) -> cran2
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
select(cran, ip_id, package, size) -> cran3
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb / 2^10)
mutate(cran3, correct_size = size + 1000)
summarize(cran, avg_bytes = mean(size))
library(dplyr)
tbl_df(mydf) -> cran
rm("mydf")
cran
?group_by
group_by(cran, package) -> by_package
by_package
summarize(by_package, mean(size))
?n
submit()
pack_sum
quantile(pack_sum$count, probs = 0.99)
filter(pack_sum, count > 679) -> top countries
filter(pack_sum, count > 679) -> top_counts
top_counts
View(top_counts)
arrange(top_counts, desc(count) -> top_counts_sorted
)
arrange(top_counts, desc(count)) -> top_counts_sorted
View(top_counts_sorted)
quantile(pack_sum$unique, probs = 0.99)
filter(pack_sum, unique > 465) -> top_unique
View(top_unique)
arrange(top_unique, desc(unique)) -> top_unique_sorted
View(top_unique_sorted)
submit()
submit()
submit()
View(results3)
View(result3)
submit()
submit()
submit()
submit()
swirl()
quit()
library(swirl)
swirl()
str(mpg)
qplot(disp, hwy, data=mpg)
qplot(displ, hwy, data=mpg)
qplot(displ, hwy, data=mpg, color=drv)
qplot(displ, hwy, data=mpg, color=drv, geom = c("point", "smooth"))
qplot(y = hwy, data = mpg, color = drv)
myhigh
qplot(drv, hwy, data = mpg, geom="boxplot")
qplot(drv, hwy, data = mpg, geom="boxplot", color=manufacturer)
qplot(hwy, data=mpg, fill=drv)
qplot(displ, hwy, data = mpg, facets = . ~ drv)
qplot(hwy, data=mpg, facets = drv ~ ., binwidth=2)
qplot(displ, hwy, data = mpg, geom=c("point", "smooth"), facets = . ~ drv)
g <- ggplot(mpg, aes("displ", "hwy"))
g <- ggplot(mpg, aes(displ, hwy))
summary(g)
g + geom_point()
g + geom_point() + geom_smooth()
g + geom_point() + geom_smooth(set = "lm")
g + geom_point() + geom_smooth(method = "lm")
g + geom_point() + geom_smooth(method = "lm") + facet_grid(. ~ drv)
g + geom_point() + geom_smooth(method = "lm") + facet_grid(. ~ drv) + ggtitle("Swirl Rules!")
g + geom_point(color = "pink", size = 4, alpha = 1/2)
g + geom_point(size = 4, alpha = 1/2, aes(color = drv))
g + geom_point(aes(color=drv)) + labs(title = "Swirl Rules!") + labs(x="Displacement", y="Hwy Mileage")
g + geom_point(aes(color=drv), size=2, alpha = 1/2) + geom_smooth(size = 4, linetype=3, method="lm", se=FALSE)
g + geom_point(aes(color=drv)) + theme_bw(base_family = "Times")
plot(myx, myy, type="l", ylim=c(-3,3))
g <- ggplot(testdat, aes(x = myx, y = myy))
g + geom_line()
g + geom_line() + ylim(-3,3)
g + geom_line() + coord_cartesian(ylim = c(-3,3))
g <- ggplot(mpg, aes(x = displ, y = hwy, color = factor(year)))
g + geom_point()
g + geom_point() + facet_grid(drv~cyl, margins = TRUE)
g + geom_point() + facet_grid(drv~cyl, margins = TRUE) + geom_smooth(method = "lm", se=FALSE, size = 2, color = "black")
g + geom_point() + facet_grid(drv~cyl, margins = TRUE) + geom_smooth(method = "lm", se=FALSE, size = 2, color = "black") + labs(x="Displacement", y="Highway Mileage", title = "Swirl Rules!")
setwd("C:\\Users\\jakub.wiatrak\\Desktop\\osobiste\\Data Science\\5. Reproducible Research\\Week 4 - Case studies\\RR-Peer-Assesment-2")
download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2FStormData.csv.bz2", destfile = "StormData.csv.bz2")
?bunzip2
??bzip
sd <- read.csv("StormData.csv.bz2")
library(data.table)
sd <- fread("StormData.csv.bz2")
library(R.utils)
install.packages("R.utils")
library(R.utils)
?bunzip2
bunzip2("StormData.csv.bz2", remove = TRUE)
sd <- fread("StormData.csv")
str(sd)
?knitr
